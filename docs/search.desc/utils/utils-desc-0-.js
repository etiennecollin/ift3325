searchState.loadedDescShard("utils", 0, "Contains utilities that are used throughout the program.\nProvides functions to perform byte stuffing on frame bytes.\nCRC-16 CCITT implementation. This module provides an …\nThe frame module contains the Frame struct, the FrameType …\nFrame handlers for the receiver.\nContains the functions to manage the IO tasks.\nContains miscellaneous helper functions.\nA sliding window for the HDLC protocol.\nDestuff the given frame bytes.\nPerform byte stuffing on the given frame bytes.\nFinal XOR value for the CRC-16 algorithm.\nInitial value for the CRC-16 algorithm.\nLookup table for the CRC-16 algorithm.\nMost significant bit of the polynomial.\nCRC-16 CCITT polynomial in hex form.\nDegree of the polynomial.\nCRC-16 CCITT implementation.\nCRC-16 CCITT implementation. This function computes the …\nGenerate a lookup table for the CRC-16 algorithm. The …\nByte stuffing boundary flag\nIndicates that the sender has finished sending data\nIndicates that the sender wants to establish a connection\nByte stuffing escape flag\nA frame for the HDLC protocol.\nAn error that may occur when working with frames. The …\nThe type of a frame. The frame type is encoded as a single …\nContains data to be transmitted\nThe size of a frame in bytes\nThe maximum size of the data field in bytes\nForces the receiver to send a response\nReplace an escaped byte by computing the XOR between the …\nIndicates that the sender is ready to receive more data\nRequests immediate retransmission of data\nUnknown frame type\nThe raw bytes of the frame before byte stuffing The frame …\nThe byte-stuffed version of the frame content\nThe data of the frame\nThe CRC-16 checksum stored in native endianess\nThe frame_type of the frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new frame from the given bytes.\nInitialize the content fields of the frame.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new frame\nThe num byte of the frame\nConvert the frame to a vector of bytes encoded with byte …\nHandles the connection end frames.\nHandles the connection start frames.\nHandles the dropped frame.\nHandles the I frame.\nHandles the P frame.\nHandles the receive ready frames.\nHandles the REJ and SREJ frames.\nThe number of message the channel can hold. That channel …\nSends a connection request frame to the server.\nCreates a frame timer task.\nHandles the received frames from the server.\nReceives frames from the server and handles them. The …\nSends a frame to the server.\nFlattens the result of a join handle. The function awaits …\nThe maximum time in seconds to wait before a fame is …\nThe window is full and cannot accept any more frames\nThe maximum number a frame can take\nNumber of bits used for numbering frames\nThe maximum number of frames that can be in the window for …\nThe maximum number of frames that can be in the window for …\nType alias for a condition variable that can be safely …\nType alias for a safe window that can be shared and …\nA sliding window for a Go-Back-N protocol. It implements a …\nType alias for a window element that contains a frame and …\nDefines the error type for the window\nCheck if the window contains a frame with the given number\nThe frames in the window\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the maximum number of frames that can be in the window\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlag to indicate if the connection is established\nCheck if the window is empty\nCheck if the window is full\nCreate a new window The window is initially empty and has …\nPop a specific frame from the window.\nPop a frame from the front of the window and return it\nPop frames from the front of the window until the frame …\nPush a frame to the back of the window and start a timer …\nFlag to resend all frames in the window\nFlag to indicate if a disconnect request was sent\nFlag to indicate if the window is using the selective …")